# Generated by Django 5.2.6 on 2025-09-18 08:09

import django.contrib.postgres.fields
import django.contrib.postgres.indexes
import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Subject",
            fields=[
                ("info_source", models.CharField(max_length=64)),
                ("id_source", models.CharField(max_length=64)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "subject_type",
                    models.CharField(
                        choices=[
                            ("anime", "Anime"),
                            ("galgame", "Galgame"),
                            ("manga", "Manga"),
                            ("game", "Game"),
                            ("novel", "Novel"),
                            ("music", "Music"),
                            ("other", "Other"),
                        ],
                        max_length=64,
                    ),
                ),
                ("title", models.CharField(blank=True, max_length=256)),
                ("date", models.DateField(blank=True, null=True)),
                ("ambiguous_date", models.DateField(blank=True, null=True)),
                ("image_original", models.URLField(blank=True, max_length=1024)),
                ("image_thumbnail", models.URLField(blank=True, max_length=1024)),
                ("description", models.TextField(blank=True)),
                ("nsfw", models.BooleanField(default=False)),
                ("infobox", models.JSONField(blank=True, default=list)),
                ("tags", models.JSONField(blank=True, default=list)),
            ],
            options={
                "db_table": "subject",
                "ordering": ["-date", "title"],
            },
        ),
        migrations.CreateModel(
            name="AnimeCharacter",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("info_source", models.CharField(max_length=64)),
                ("id_source", models.CharField(max_length=64)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(blank=True, max_length=256)),
                ("image_original", models.URLField(blank=True, max_length=1024)),
                ("image_thumbnail", models.URLField(blank=True, max_length=1024)),
                ("description", models.TextField(blank=True)),
                ("gender", models.CharField(blank=True, max_length=64)),
                ("birth", models.JSONField(blank=True, default=dict)),
                ("age", models.IntegerField(blank=True, null=True)),
                ("height", models.CharField(blank=True, max_length=64)),
                ("weight", models.CharField(blank=True, max_length=64)),
                ("bwh", models.JSONField(blank=True, default=dict)),
                ("blood_type", models.CharField(blank=True, max_length=64)),
            ],
            options={
                "db_table": "anime_character",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="AnimeCharacterRelation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("description", models.TextField(blank=True)),
            ],
            options={
                "db_table": "anime_character_relation",
                "ordering": ["anime", "character"],
            },
        ),
        migrations.CreateModel(
            name="AnimeCharacterRelationRole",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("code", models.CharField(max_length=256)),
                ("name", models.CharField(blank=True, max_length=256)),
            ],
            options={
                "db_table": "anime_character_relation_role",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="AnimeEpisode",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("info_source", models.CharField(max_length=64)),
                ("id_source", models.CharField(max_length=64)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("title", models.CharField(blank=True, max_length=256)),
                ("type", models.CharField(blank=True, max_length=64)),
                ("ep_num", models.IntegerField(blank=True, null=True)),
                ("duration", models.DurationField(blank=True, null=True)),
                ("airdate", models.DateField(blank=True, null=True)),
                ("description", models.TextField(blank=True)),
            ],
            options={
                "db_table": "anime_episode",
                "ordering": ["anime", "type", "ep_num"],
            },
        ),
        migrations.CreateModel(
            name="AnimeGenre",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("code", models.CharField(max_length=256)),
                ("name", models.CharField(blank=True, max_length=256)),
            ],
            options={
                "db_table": "anime_genre",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="AnimeStaff",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("info_source", models.CharField(max_length=64)),
                ("id_source", models.CharField(max_length=64)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(blank=True, max_length=256)),
                ("description", models.TextField(blank=True)),
                ("gender", models.CharField(blank=True, max_length=64)),
                ("birth", models.JSONField(blank=True, default=dict)),
                ("type", models.CharField(blank=True, max_length=64)),
                ("career", models.CharField(blank=True, max_length=64)),
            ],
            options={
                "db_table": "anime_staff",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="AnimeStaffRelation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("description", models.TextField(blank=True)),
            ],
            options={
                "db_table": "anime_staff_relation",
                "ordering": ["anime", "staff"],
            },
        ),
        migrations.CreateModel(
            name="AnimeStaffRelationRole",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("code", models.CharField(max_length=256)),
                ("name", models.CharField(blank=True, max_length=256)),
            ],
            options={
                "db_table": "anime_staff_relation_role",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="GalgameCharacter",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("info_source", models.CharField(max_length=64)),
                ("id_source", models.CharField(max_length=64)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(blank=True, max_length=256)),
                ("image_original", models.URLField(blank=True, max_length=1024)),
                ("image_thumbnail", models.URLField(blank=True, max_length=1024)),
                ("description", models.TextField(blank=True)),
                ("gender", models.CharField(blank=True, max_length=64)),
                ("birth", models.JSONField(blank=True, default=dict)),
                ("age", models.IntegerField(blank=True, null=True)),
                ("height", models.CharField(blank=True, max_length=64)),
                ("weight", models.CharField(blank=True, max_length=64)),
                ("bwh", models.JSONField(blank=True, default=dict)),
                ("blood_type", models.CharField(blank=True, max_length=64)),
            ],
            options={
                "db_table": "galgame_character",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="GalgameCharacterRelation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("description", models.TextField(blank=True)),
            ],
            options={
                "db_table": "galgame_character_relation",
                "ordering": ["galgame", "character"],
            },
        ),
        migrations.CreateModel(
            name="GalgameCharacterTrait",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("code", models.CharField(max_length=256)),
                ("name", models.CharField(blank=True, max_length=256)),
            ],
            options={
                "db_table": "galgame_character_trait",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="GalgameGenre",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("code", models.CharField(max_length=256)),
                ("name", models.CharField(blank=True, max_length=256)),
            ],
            options={
                "db_table": "galgame_genre",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="GalgameProducer",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("info_source", models.CharField(max_length=64)),
                ("id_source", models.CharField(max_length=64)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(blank=True, max_length=256)),
                ("aliases", models.JSONField(blank=True, default=list)),
                ("type", models.CharField(blank=True, max_length=64)),
                ("description", models.TextField(blank=True)),
                ("official_website", models.URLField(blank=True, max_length=1024)),
                ("external_link", models.JSONField(blank=True, default=dict)),
            ],
            options={
                "db_table": "galgame_producer",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="GalgameStaff",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("info_source", models.CharField(max_length=64)),
                ("id_source", models.CharField(max_length=64)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(blank=True, max_length=256)),
                ("description", models.TextField(blank=True)),
                ("gender", models.CharField(blank=True, max_length=64)),
                ("birth", models.JSONField(blank=True, default=dict)),
                ("aliases", models.JSONField(blank=True, default=list)),
                ("external_link", models.JSONField(blank=True, default=dict)),
            ],
            options={
                "db_table": "galgame_staff",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="GalgameStaffRelation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("description", models.TextField(blank=True)),
            ],
            options={
                "db_table": "galgame_staff_relation",
                "ordering": ["galgame", "staff"],
            },
        ),
        migrations.CreateModel(
            name="GalgameStaffRelationRole",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("code", models.CharField(max_length=256)),
                ("name", models.CharField(blank=True, max_length=256)),
            ],
            options={
                "db_table": "galgame_staff_relation_role",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="PendingUpdate",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("next_update_time", models.DateTimeField()),
                ("task_type", models.CharField(max_length=64)),
                ("attempt_count", models.IntegerField(default=0)),
                ("latest_log", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "db_table": "pending_update",
            },
        ),
        migrations.CreateModel(
            name="SubjectRelation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
            ],
            options={
                "db_table": "subject_relation",
            },
        ),
        migrations.CreateModel(
            name="SubjectRelationType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("code", models.CharField(max_length=256)),
                ("name", models.CharField(blank=True, max_length=256)),
            ],
            options={
                "db_table": "subject_relation_type",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="SubjectStatus",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "severity",
                    models.CharField(
                        choices=[
                            ("info", "Info"),
                            ("warning", "Warning"),
                            ("error", "Error"),
                        ],
                        max_length=64,
                    ),
                ),
                ("headline", models.CharField(blank=True, max_length=256)),
                ("detail", models.TextField(blank=True)),
                ("is_resolved", models.BooleanField(default=False)),
                ("is_locked", models.BooleanField(default=False)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "db_table": "subject_status",
            },
        ),
        migrations.CreateModel(
            name="Anime",
            fields=[
                ("info_source", models.CharField(max_length=64)),
                ("id_source", models.CharField(max_length=64)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "subject",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        primary_key=True,
                        related_name="anime",
                        serialize=False,
                        to="index.subject",
                    ),
                ),
                (
                    "aliases",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(max_length=256),
                        blank=True,
                        default=list,
                        size=None,
                    ),
                ),
                ("titles", models.JSONField(blank=True, default=dict)),
                ("start_date", models.DateField(blank=True, null=True)),
                ("end_date", models.DateField(blank=True, null=True)),
                ("anime_type", models.CharField(blank=True, max_length=64)),
                ("anime_source", models.CharField(blank=True, max_length=64)),
                ("official_websites", models.JSONField(blank=True, default=list)),
                ("description", models.TextField(blank=True)),
                ("image_original", models.URLField(blank=True, max_length=1024)),
                ("image_thumbnail", models.URLField(blank=True, max_length=1024)),
                ("image_extra", models.JSONField(blank=True, default=list)),
                ("anime_status", models.CharField(blank=True, max_length=256)),
                ("ep_total", models.IntegerField(blank=True, null=True)),
                ("broadcast", models.JSONField(blank=True, default=dict)),
                ("broadcast_season", models.JSONField(blank=True, default=dict)),
                ("external_links", models.JSONField(blank=True, default=dict)),
            ],
            options={
                "db_table": "anime",
                "ordering": ["-subject__date", "subject__title"],
            },
        ),
        migrations.CreateModel(
            name="Galgame",
            fields=[
                ("info_source", models.CharField(max_length=64)),
                ("id_source", models.CharField(max_length=64)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "subject",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        primary_key=True,
                        related_name="galgame",
                        serialize=False,
                        to="index.subject",
                    ),
                ),
                (
                    "aliases",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(max_length=256),
                        blank=True,
                        default=list,
                        size=None,
                    ),
                ),
                ("titles", models.JSONField(blank=True, default=dict)),
                ("released_date", models.DateField(blank=True, null=True)),
                ("description", models.TextField(blank=True)),
                ("image_original", models.URLField(blank=True, max_length=1024)),
                ("image_thumbnail", models.URLField(blank=True, max_length=1024)),
                ("screenshots", models.URLField(blank=True, max_length=1024)),
                ("platforms", models.JSONField(blank=True, default=list)),
                ("galgame_status", models.CharField(blank=True, max_length=64)),
                ("external_links", models.JSONField(blank=True, default=list)),
            ],
            options={
                "db_table": "galgame",
                "ordering": ["-subject__date", "subject__title"],
            },
        ),
        migrations.AddIndex(
            model_name="subject",
            index=models.Index(fields=["title"], name="idx_subject_title"),
        ),
        migrations.AddField(
            model_name="animecharacterrelation",
            name="character",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="index.animecharacter"
            ),
        ),
        migrations.AddConstraint(
            model_name="animecharacterrelationrole",
            constraint=models.UniqueConstraint(
                fields=("code",), name="uq_anime_character_relation_role_code"
            ),
        ),
        migrations.AddField(
            model_name="animecharacterrelation",
            name="role",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                to="index.animecharacterrelationrole",
            ),
        ),
        migrations.AddConstraint(
            model_name="animegenre",
            constraint=models.UniqueConstraint(
                fields=("code",), name="uq_anime_genre_code"
            ),
        ),
        migrations.AddField(
            model_name="animecharacter",
            name="actors",
            field=models.ManyToManyField(
                blank=True, related_name="characters", to="index.animestaff"
            ),
        ),
        migrations.AddField(
            model_name="animestaffrelation",
            name="staff",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="index.animestaff"
            ),
        ),
        migrations.AddConstraint(
            model_name="animestaffrelationrole",
            constraint=models.UniqueConstraint(
                fields=("code",), name="uq_anime_staff_relation_role_code"
            ),
        ),
        migrations.AddField(
            model_name="animestaffrelation",
            name="role",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                to="index.animestaffrelationrole",
            ),
        ),
        migrations.AddField(
            model_name="galgamecharacterrelation",
            name="character",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="index.galgamecharacter"
            ),
        ),
        migrations.AddConstraint(
            model_name="galgamecharactertrait",
            constraint=models.UniqueConstraint(
                fields=("code",), name="uq_galgame_character_trait_code"
            ),
        ),
        migrations.AddField(
            model_name="galgamecharacter",
            name="traits",
            field=models.ManyToManyField(
                blank=True, related_name="characters", to="index.galgamecharactertrait"
            ),
        ),
        migrations.AddConstraint(
            model_name="galgamegenre",
            constraint=models.UniqueConstraint(
                fields=("code",), name="uq_galgame_genre_code"
            ),
        ),
        migrations.AddField(
            model_name="galgamecharacter",
            name="actors",
            field=models.ManyToManyField(
                blank=True, related_name="characters", to="index.galgamestaff"
            ),
        ),
        migrations.AddField(
            model_name="galgamestaffrelation",
            name="staff",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="index.galgamestaff"
            ),
        ),
        migrations.AddConstraint(
            model_name="galgamestaffrelationrole",
            constraint=models.UniqueConstraint(
                fields=("code",), name="uq_galgame_staff_relation_role_code"
            ),
        ),
        migrations.AddField(
            model_name="galgamestaffrelation",
            name="role",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                to="index.galgamestaffrelationrole",
            ),
        ),
        migrations.AddField(
            model_name="pendingupdate",
            name="subject",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="index.subject"
            ),
        ),
        migrations.AddField(
            model_name="subjectrelation",
            name="source",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="outgoing_relations",
                to="index.subject",
            ),
        ),
        migrations.AddField(
            model_name="subjectrelation",
            name="target",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="incoming_relations",
                to="index.subject",
            ),
        ),
        migrations.AddConstraint(
            model_name="subjectrelationtype",
            constraint=models.UniqueConstraint(
                fields=("code",), name="uq_subject_relation_type_code"
            ),
        ),
        migrations.AddField(
            model_name="subjectrelation",
            name="type",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                to="index.subjectrelationtype",
            ),
        ),
        migrations.AddField(
            model_name="subjectstatus",
            name="subject",
            field=models.OneToOneField(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="status",
                to="index.subject",
            ),
        ),
        migrations.AddField(
            model_name="animestaffrelation",
            name="anime",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="index.anime"
            ),
        ),
        migrations.AddField(
            model_name="animeepisode",
            name="anime",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="episodes",
                to="index.anime",
            ),
        ),
        migrations.AddField(
            model_name="animecharacterrelation",
            name="anime",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="index.anime"
            ),
        ),
        migrations.AddField(
            model_name="anime",
            name="characters",
            field=models.ManyToManyField(
                blank=True,
                related_name="animes",
                through="index.AnimeCharacterRelation",
                to="index.animecharacter",
            ),
        ),
        migrations.AddField(
            model_name="anime",
            name="genres",
            field=models.ManyToManyField(
                blank=True, related_name="animes", to="index.animegenre"
            ),
        ),
        migrations.AddField(
            model_name="anime",
            name="staff",
            field=models.ManyToManyField(
                blank=True,
                related_name="animes",
                through="index.AnimeStaffRelation",
                to="index.animestaff",
            ),
        ),
        migrations.AddField(
            model_name="galgamestaffrelation",
            name="galgame",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="index.galgame"
            ),
        ),
        migrations.AddField(
            model_name="galgamecharacterrelation",
            name="galgame",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="index.galgame"
            ),
        ),
        migrations.AddField(
            model_name="galgame",
            name="characters",
            field=models.ManyToManyField(
                blank=True,
                related_name="galgames",
                through="index.GalgameCharacterRelation",
                to="index.galgamecharacter",
            ),
        ),
        migrations.AddField(
            model_name="galgame",
            name="genres",
            field=models.ManyToManyField(
                blank=True, related_name="galgames", to="index.galgamegenre"
            ),
        ),
        migrations.AddField(
            model_name="galgame",
            name="producers",
            field=models.ManyToManyField(
                blank=True, related_name="galgames", to="index.galgameproducer"
            ),
        ),
        migrations.AddField(
            model_name="galgame",
            name="staff",
            field=models.ManyToManyField(
                blank=True,
                related_name="galgames",
                through="index.GalgameStaffRelation",
                to="index.galgamestaff",
            ),
        ),
        migrations.AddIndex(
            model_name="pendingupdate",
            index=models.Index(
                fields=["next_update_time"], name="pending_upd_next_up_104ba0_idx"
            ),
        ),
        migrations.AddConstraint(
            model_name="pendingupdate",
            constraint=models.UniqueConstraint(
                fields=("subject",), name="uq_pending_update_subject"
            ),
        ),
        migrations.AddIndex(
            model_name="subjectstatus",
            index=models.Index(
                fields=["severity"], name="subject_sta_severit_f10a71_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="subjectstatus",
            index=models.Index(
                fields=["headline"], name="subject_sta_headlin_ebd1e4_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="subjectstatus",
            index=models.Index(
                fields=["is_resolved"], name="subject_sta_is_reso_1a3347_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="subjectstatus",
            index=models.Index(
                fields=["is_locked"], name="subject_sta_is_lock_0f5a1d_idx"
            ),
        ),
        migrations.AddConstraint(
            model_name="animestaffrelation",
            constraint=models.UniqueConstraint(
                fields=("anime", "staff", "role"), name="uq_anime_staff_role"
            ),
        ),
        migrations.AddConstraint(
            model_name="animecharacterrelation",
            constraint=models.UniqueConstraint(
                fields=("anime", "character", "role"), name="uq_anime_character_role"
            ),
        ),
        migrations.AddIndex(
            model_name="anime",
            index=django.contrib.postgres.indexes.GinIndex(
                fields=["aliases"], name="idx_anime_aliases"
            ),
        ),
        migrations.AddConstraint(
            model_name="galgamestaffrelation",
            constraint=models.UniqueConstraint(
                fields=("galgame", "staff", "role"), name="uq_galgame_staff_role"
            ),
        ),
        migrations.AddConstraint(
            model_name="galgamecharacterrelation",
            constraint=models.UniqueConstraint(
                fields=("galgame", "character"), name="uq_galgame_character"
            ),
        ),
        migrations.AddIndex(
            model_name="galgame",
            index=models.Index(fields=["id_source"], name="idx_galgame_staff_source"),
        ),
        migrations.AddIndex(
            model_name="galgame",
            index=django.contrib.postgres.indexes.GinIndex(
                fields=["aliases"], name="idx_galgame_aliases"
            ),
        ),
        migrations.AddConstraint(
            model_name="galgame",
            constraint=models.UniqueConstraint(
                fields=("info_source", "id_source"), name="uq_galgame_source"
            ),
        ),
    ]
